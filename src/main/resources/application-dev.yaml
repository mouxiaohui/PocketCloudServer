server:
  port: 8383

spring:
  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/pocket_cloud?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&allowMultiQueries=true
    username: root
    password: root
  # redis配置
  data:
    redis:
      host: localhost
      port: 6379
      # password:
      database: 0 # 指定redis的分库(共16个,0-15)
  servlet:
    multipart:
      max-file-size: 3072MB
      max-request-size: 3072MB
  #邮件服务配置
  mail:
    host: smtp.qq.com # 发送邮件服务器地址
    port: 465 # 发送邮件端口
    protocol: smtps # 协议
    username: 1580374360@qq.com # 发送邮件的邮箱也就是你开通服务的邮箱
    password: jfekiwcgoslwgcgf # 开通服务后得到的授权码
    default-encoding: utf-8 # 邮件内容的编码
    properties:
      mail:
        smtp:
          auth: true  # 启用SMTP身份验证
          starttls:
            enable: true  # 启用STARTTLS安全连接
          ssl:
            enable: true  # 启用SSL加密连接
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
    # 邮件发送者
    from: PocketCloud <1580374360@qq.com>
    # 邮箱验证码过期时间
    expire-seconds: 300 # 5分钟
  # 配置Freemarker模板引擎
  freemarker:
    template-loader-path: classpath:/templates/ # 指定模板加载路径
    suffix: ftl # 设置模板文件的后缀为ftl

# 认证配置
auth:
  # 无需认证的请求路径
  ignore-urls:
    - /api/v1/user/login          # 登录接口
    - /api/v1/user/register       # 注册接口
    - /api/v1/code/captcha        # 图片验证码获取接口
    - /api/v1/code/email          # 邮箱验证码发送接口

# jwt 配置
jwt:
  header: Authorization # 请求头
  expire: 259200 # 过期时间3天(单位:s)
  secret: 88c29xi8fe19d30b12325a4fac8a3733ec # secret: 秘钥(普通字符串) 不能太短，太短可能会导致报错
  issuer: xiaohui # 签发者

# mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.xiaohui.pocket.model.entity
  configuration:
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# springdoc配置： https://springdoc.org/properties.html
springdoc:
  swagger-ui:
    # 自定义Swagger UI的路径
    path: /swagger-ui.html
    # 对操作进行排序的方式，这里选择字母排序
    operations-sorter: alpha
    # 对标签进行排序的方式，这里选择字母排序
    tags-sorter: alpha
  # API文档相关配置
  api-docs:
    # 自定义API文档的路径
    path: /api-docs
  # API分组配置
  group-configs:
    - group: 'PocketCloud'
      # 匹配的路径，这里匹配所有路径
      paths-to-match: "/**"
      # 需要扫描的包，以确定哪些控制器包含在当前分组中
      packages-to-scan:
        - com.xiaohui.pocket.system.controller
  # 默认的扁平化参数对象配置，设置为true以启用
  default-flat-param-object: true

# knife4j 接口文档配置
knife4j:
  # 是否开启 Knife4j 增强功能
  enable: true  # 设置为 true 表示开启增强功能
  # 生产环境配置
  production: false  # 设置为 true 表示在生产环境中不显示文档，为 false 表示显示文档（通常在开发环境中使用）
  setting:
    language: zh_cn

# 验证码配置
captcha:
  # 验证码类型 circle-圆圈干扰验证码|gif-Gif验证码|line-干扰线验证码|shear-扭曲干扰验证码
  type: circle
  # 验证码宽度
  width: 120
  # 验证码高度
  height: 40
  # 验证码干扰元素个数
  interfere-count: 4
  # 文本透明度(0.0-1.0)
  text-alpha: 0.8
  # 验证码字符配置
  code:
    # 验证码字符类型 math-算术|random-随机字符
    type: random
    # 验证码字符长度，type=算术时，表示运算位数(1:个位数运算 2:十位数运算)；type=随机字符时，表示字符个数
    length: 4
  # 验证码字体
  font:
    # 字体名称 Dialog|DialogInput|Monospaced|Serif|SansSerif
    name: SansSerif
    # 字体样式 0-普通|1-粗体|2-斜体
    weight: 1
    # 字体大小
    size: 24
  # 验证码有效期(秒)
  expire-seconds: 120

#存储设置
storage:
  engine:
    local:
      root-file-path: E:\code\2025\PocketCloud\PocketCloudServer\storage
      root-file-chunk-path: E:\code\2025\PocketCloud\PocketCloudServer\storage\chunk